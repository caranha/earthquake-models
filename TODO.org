* TASKLIST
** Test All quakes program:
- [X] Selects a subgroup of valid earthquakes
  Valid earthquakes have Magnitude > X, and aftershocks with mag > Z after 1 day > Y
*** Calculate hypothesis for each valid earthquake
    - [ ] Calculate hypothesis for each fault and for days 1, 2, 3.
    - [ ] Print raw info and "win/lose" info to a "earthquake file"
    - [ ] Point-in-plane Hypothesis
    - [ ] Distance-from-fault depth hypothesis
    - [ ] Distance-from-known-fault hypothesis
- [ ] Determine how many earthquakes can be uniquely identified by each hypothesis

** New GUI:
- [ ] Create GUI outline

*** Japanese Map
    - [ ] Show/Hide Faults
    - [ ] Zoom/Move around
*** Filter earthquakes 
    - [ ] Magnitude
    - [ ] Depth
    - [ ] Fault Model
*** Earthquake-Of-Interest List
    - [ ] Add/Remove
    - [ ] Display Location (toggle)
    - [ ] Display Plane
    - [ ] Display Aftershocks

*** Hypothesis
    - [ ] Filter earthquakes by hypothesis (differentiated by hypothesis)
    - [ ] For one earthquake, show hypothesis info
    - [ ] Show hypothesis info on map: Nearest fault, points in plane, etc.

** Refactoring:
- [ ] Fault model information in event is represented by two FaultModel objects

** Map and Fault information
*** GeoLine Object
    Contains a "geoline": A fault line, a shoreline, etc. A geoline is
    composed of multiple points.
    - [X] Basic data (point vector)
    - [X] Draw method (receives color and drawing context)
    - [ ] Crosses Box (tests if any point of the Geoline is inside the
      box.
    - [ ] Distance from line (calculates the distance between a
      straight line segment and the geoline object. This is needed to
      test if a fault is related to an event. (How to do this?)

*** GeoLineCollection Object
    Contains a group of Geolines. Mostly used for organizing them,
    multiple printing, etc.
    - [X] Reading from a file;
    - [X] Printing everything to an image (receives color, context);
    - [ ] Select a subset of geolines that crosses a rectangle;


